pip install transformers datasets


from datasets import load_dataset
from transformers import DistilBertTokenizerFast, DistilBertForSequenceClassification, Trainer, TrainingArguments
import torch

# Load dataset (IMDb is large; using a small sample for quick training)
dataset = load_dataset("imdb", split='train[:1000]')
dataset = dataset.train_test_split(test_size=0.2)

# Load tokenizer and model
tokenizer = DistilBertTokenizerFast.from_pretrained('distilbert-base-uncased')
model = DistilBertForSequenceClassification.from_pretrained('distilbert-base-uncased')

# Tokenize the dataset
def preprocess(example):
    return tokenizer(example['text'], padding='max_length', truncation=True)

tokenized_data = dataset.map(preprocess, batched=True)
tokenized_data.set_format('torch', columns=['input_ids', 'attention_mask', 'label'])

# Training arguments
training_args = TrainingArguments(
    output_dir="./results",
    evaluation_strategy="epoch",
    per_device_train_batch_size=8,
    per_device_eval_batch_size=8,
    num_train_epochs=1,
    logging_steps=10,
    save_strategy="no"
)

# Trainer
trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_data['train'],
    eval_dataset=tokenized_data['test']
)

# Train the model
trainer.train()

# Evaluate
print("\nEvaluation:")
trainer.evaluate()
