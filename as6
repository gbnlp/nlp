from sklearn.feature_extraction.text import CountVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report

# Sample data
texts = [
    "I love this product. It's amazing!",
    "This is the worst thing I ever bought.",
    "Not bad, could be better.",
    "Absolutely fantastic experience.",
    "Terrible customer service.",
    "I'm very happy with this.",
    "It was okay, nothing special.",
    "Horrible, I want a refund.",
    "Excellent quality and performance.",
    "Disappointed and frustrated."
]

# Labels: 1 = positive, 0 = negative
labels = [1, 0, 0, 1, 0, 1, 0, 0, 1, 0]

# Text to feature vector
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(texts)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, labels, test_size=0.3, random_state=42)

# Log-linear model (Logistic Regression)
model = LogisticRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluation
print("Classification Report:\n")
print(classification_report(y_test, y_pred, target_names=["Negative", "Positive"]))

import spacy

# Load English model
nlp = spacy.load("en_core_web_sm")

# Input text
text = """Deepak Jasani, Head of retail research, HDFC Securities, said: “Investors will look 
to the European Central Bank later Thursday for reassurance that surging prices are
just transitory, and not about to spiral out of control. In addition to the ECB policy
meeting, investors are awaiting a report later Thursday on US economic growth,
which is likely to show a cooling recovery, as well as weekly jobs data.”."""

# Process the text
doc = nlp(text)

# Extract named entities
print("Named Entities:\n")
for ent in doc.ents:
    print(f"{ent.text} --> {ent.label_}")
